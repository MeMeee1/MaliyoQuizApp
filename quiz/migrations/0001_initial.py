# Generated by Django 4.1.5 on 2023-01-17 20:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Form",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=500)),
                ("description", models.CharField(max_length=500)),
                (
                    "max_fill_attempts",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="The number of times a particular IP Address can fill a form",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "form",
                "verbose_name_plural": "forms",
                "ordering": ["-last_updated_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_text",
                    models.CharField(
                        help_text="Actual question text that gets displayed to the user.",
                        max_length=500,
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("RADIO", "Radio"),
                            ("CHECKBOX", "Checkbox"),
                            ("COLOR", "Color"),
                            ("DATE", "Date"),
                            ("DATETIME", "Datetime"),
                        ],
                        help_text="Determines the type of question, and the corresponding HTML element that gets created",
                        max_length=20,
                    ),
                ),
                (
                    "extra_parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Can be used to store extra data for validating different question types",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "question",
                "verbose_name_plural": "questions",
                "ordering": ["-last_updated_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuestionOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_text",
                    models.CharField(
                        help_text="Actual option text that gets displayed to the user",
                        max_length=250,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="The value that gets stored in the DB", max_length=250
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        related_query_name="option",
                        to="quiz.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "question option",
                "verbose_name_plural": "question options",
            },
        ),
        migrations.CreateModel(
            name="UserResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_value",
                    models.CharField(
                        help_text="The user provided value", max_length=500
                    ),
                ),
                (
                    "user_ip",
                    models.GenericIPAddressField(
                        help_text="The IP Address of the user device"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "form",
                    models.ForeignKey(
                        help_text="Form for which the response was recorded",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.form",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="The question the user is answering",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.question",
                    ),
                ),
                (
                    "selected_options",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Selected option if user is limited to a specific set of options",
                        to="quiz.questionoption",
                    ),
                ),
            ],
            options={
                "verbose_name": "user response",
                "verbose_name_plural": "user reponses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FormQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_question",
                        to="quiz.form",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_question",
                        to="quiz.question",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="form",
            name="questions",
            field=models.ManyToManyField(
                related_name="forms",
                related_query_name="form",
                through="quiz.FormQuestion",
                to="quiz.question",
            ),
        ),
    ]
